USE BRILLICA;
SELECT * FROM SALES;
SELECT *, SUM(`UNITS SOLD`) OVER(ORDER BY ID) AS RUN_TOTAL FROM SALES;
WITH CTE AS(
SELECT MONTH, SUM(PROFIT) AS PROFIT FROM SALES GROUP BY MONTH)
SELECT *,PROFIT-LEAD(PROFIT) OVER() AS DIFF FROM CTE;
# SHOW THE RANK OF PROFIT BY EACH MONTH. 
WITH CTE AS(
SELECT MONTH, SUM(PROFIT) AS PRFT FROM SALES GROUP BY MONTH)
SELECT *,RANK() OVER(ORDER BY PRFT DESC) AS RNK FROM CTE;

--------------------------------------------------------------------------------------------------------------------------------------------------------------------------
-- STORED PROCEDURE : A STORED PROCEDURE IS A SAVED COLLECTION OF SQL QUERIES THAT CAN BE REUSED MUTIPLE TIMES. 
-- THEY ARE STORED IN THE DATABASE AND CAN BE EXECUTED WITH A SINGLE CALL.

-- BENEFITS : 
-- REUSABILITY : WRITE ONCE, USE MULTIPLE TIMES.
-- MAINTAINABILITY : EASIER TO UPDATE AND MANAGE LOGIC IN ONE PLACE.
-- PERFORMANCE : PRECOMPILED AND OPTIMIZED BY THE DATABASE ENGINE.
-- SECURITY : CAN RESTRICT DIRECT ACCESS TO DATA, EXPOSING ONLY NECCESARY OPERATIONS. 

# CREATING A PROCEDURE : 
DELIMITER //
CREATE PROCEDURE MARKS()
	BEGIN
		SELECT * FROM MARKSHEET;
	END // 
DELIMITER ;

# CALLING THE PROCEDURE : 
CALL MARKS();

# DELETING A PROCEDURE : 
DROP PROCEDURE MARKS;

DELIMITER ** 
CREATE PROCEDURE PRERNA(IN MARKS TEXT)
		BEGIN
			SELECT * FROM MARKSHEET WHERE ADDRESS=MARKS;
		END **
DELIMITER ;
CALL PRERNA("BIHAR");

DELIMITER //
CREATE PROCEDURE X()
		BEGIN
			SELECT * FROM MARKSHEET;
		END // 
DELIMITER ;
CALL X();
DELIMITER ** 
CREATE PROCEDURE PRE(IN X TEXT)
		BEGIN
			SELECT * FROM MARKSHEET WHERE ADDRESS=X;
		END **
DELIMITER ;
CALL PRE("BIHAR");

# GROUP A MARKSHEET COLUMN BY TWO PARAMTER A AND B AND SHOW GROUPED TABLE
DELIMITER //
CREATE PROCEDURE AB(IN X TEXT, IN Y INT)
				BEGIN
					SELECT * FROM MARKSHEET WHERE GENDER=X AND MARKS>Y;
				END //
DELIMITER ;
CALL AB("BOY",400);

USE BRILLICA;
SELECT * FROM MARKSHEET;
DELIMITER **
CREATE PROCEDURE NAM(IN X TEXT)
		BEGIN
			SELECT * FROM MARKSHEET WHERE LEFT(STUDENTS_NAME,1)=X;
		END **
DELIMITER ;

CALL NAM ("A");

